{"ast":null,"code":"var _jsxFileName = \"/Users/seongjehun/Desktop/study/nomadCoder/movie_app_2019/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      }); // {movies:movies} {moives} 는 완전히 같은 기능임\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    console.log(movie.genres);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader_text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          id: movie.id,\n          year: movie.year,\n          title: movie.title,\n          summary: movie.summary,\n          poster: movie.medium_cover_image,\n          genres: movie.genres\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/seongjehun/Desktop/study/nomadCoder/movie_app_2019/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","console","log","movie","genres","map","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;;AAAA,SAU/BC,SAV+B,GAUnB,YAAY;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAE;AAACA,UAAAA,IAAI,EAAE;AAACF,YAAAA;AAAD;AAAP;AAAP,UAA2B,MAAMN,KAAK,CAACS,GAAN,CAAU,uEAAV,CAAvC;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASD,QAAAA,SAAS,EAAE;AAApB,OAAd,EAFsB,CAEoB;AAC3C,KAb8B;AAAA;;AAc/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL;AACD;;AAEDK,EAAAA,MAAM,GAAE;AACN,UAAM;AAACP,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAsB,KAAKF,KAAjC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,MAAlB;AACA,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBACCX,SAAS,gBAAI;AAAA,+BACZ;AAAM,UAAA,SAAS,EAAG,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADY;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAIN;AAAK,QAAA,SAAS,EAAG,QAAjB;AAAA,kBAEIC,MAAM,CAACW,GAAP,CAAWF,KAAK,iBACd,QAAC,KAAD;AAED,UAAA,EAAE,EAAEA,KAAK,CAACG,EAFT;AAGD,UAAA,IAAI,EAAEH,KAAK,CAACI,IAHX;AAID,UAAA,KAAK,EAAEJ,KAAK,CAACK,KAJZ;AAKD,UAAA,OAAO,EAAEL,KAAK,CAACM,OALd;AAMD,UAAA,MAAM,EAAEN,KAAK,CAACO,kBANb;AAOD,UAAA,MAAM,EAAEP,KAAK,CAACC;AAPb,WACID,KAAK,CAACG,EADV;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA7C8B;;AAgDjC,eAAehB,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  // getMovies = async () => {\n  //   const movie = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\")\n  //   console.log(movie);\n  //   console.log(movie.data.data.movies);\n  // }\n  getMovies = async () => {\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({movies, isLoading: false}) // {movies:movies} {moives} 는 완전히 같은 기능임\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render(){\n    const {isLoading, movies} = this.state;\n    console.log(movie.genres);\n    return(\n      <section className=\"container\"> \n      {isLoading ? (<div>\n        <span className = \"loader_text\">Loading...</span>\n      </div>) : \n        (\n          <div className = \"movies\">\n            {\n              movies.map(movie=>(\n                <Movie\n               key={movie.id}\n               id={movie.id} \n               year={movie.year} \n               title={movie.title} \n               summary={movie.summary} \n               poster={movie.medium_cover_image}\n               genres={movie.genres}\n               />\n             ))\n            }\n          </div>\n        )\n      }\n    </section>)\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}